%YAML 1.1
---
# from running once with OKPKey.generate_key(algorithm=algorithms.EdDSA,
# key_ops=keyops.DeriveKeyOp)
# static_private_key = b'p\x05\x90#\xe2:\xdd\x08\xd68\x8d\xcb\x16\xd5\r\x83\xe8\xaa\x18O<\x92@\t\xc7+\xab\xb2\x89\xb60e'
# static_public_key = b'J&\xddi\xe9\x93\xbe\xc5\x9a\xb7\xbfG)\t\x1f\x1e%\x16\xb9\xac\xed\xfe\x9d\xccX\x8c\xa1\xaf\x82PlT'
":serverRPK":
        edhoc-private:
                suites: [0, 1]
                id_cred: {4: {ascii: 'serverRPK'}}
                cred: {1: 1, -1: 4, -2: {hex: 4a26dd69e993bec59ab7bf4729091f1e2516b9acedfe9dcc588ca1af82506c54}, "subject name": ""}
                private_key:
                        {1: 1, -1: 4, -4: {hex: 70059023e23add08d6388dcb16d50d83e8aa184f3c924009c72babb289b63065}}

":demoCertificate":
    edhoc-private:
        suites: [0, 1]
        id_cred: {34: [-15, {'hex': '6844078a53f312f5'}]}
        cred: {'ascii': "we don't *really* use this"}
        private_key: {1: 1, -1: 6, -4: {'hex': 'df69274d713296e246306365372b4683ced5381bfcadcd440a24c391d2fedb94'}}

# this is the first case where we start seeing actual redundancy in the file; not trying to simplify much right away
":p256":
    edhoc-private:
        suites: [2, 3]
        id_cred: {4: {'ascii': 'p256key'}}
        cred: {1: 1, -1: 4, -2: {'hex': 'fa8e29de1331acfaae945ead04a4cb35536953d8e95a35078db18621481e6e61'}, -3: {'hex': '3a8f614fda278d9ea8bec663c1578f87a2ab723eebe2581fdf2f5299dc0cba3e'}, 'subject name': ''}
        private_key: {1: 2, -1: 1, -2: {'hex': 'fa8e29de1331acfaae945ead04a4cb35536953d8e95a35078db18621481e6e61'}, -3: {'hex': '3a8f614fda278d9ea8bec663c1578f87a2ab723eebe2581fdf2f5299dc0cba3e'}, -4: {'hex': '12f63e83a5bfa217c7ec0bc86b96f2c4878142c73a80bcfa5db519cee9476d7c'}}
